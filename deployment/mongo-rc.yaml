apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-1
  labels:
    name: mongo-svc-1
    app: mongo
    layer: database
    project: dave
spec:
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongo-svc-1
  selector:
    name: mongo-node-1
---

apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-2
  labels:
    name: mongo-svc-2
    app: mongo
    layer: database
    project: dave
spec:
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongo-svc-2
  selector:
    name: mongo-node-2
---

apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-3
  labels:
    name: mongo-svc-3
    app: mongo
    layer: database
    project: dave
spec:
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongo-svc-3
  selector:
    name: mongo-node-3
---

apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  labels:
    name: mongo-headless
    app: mongo
    layer: database
    project: dave
spec:
  clusterIP: None
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
  selector:
    app: mongo
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mongo-1
  labels:
    name: mongo-rc
    app: mongo
    layer: database
    project: dave
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-node-1
        app: mongo
        layer: database
        project: dave
    spec:
      containers:
      - name: mongo-node-1
        image: mongo
        command:
          - mongod
          - "--replSet"
          - my_replica_set
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage-1
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage-1
        persistentVolumeClaim:
          claimName: mongo-storage-1
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mongo-2
  labels:
    name: mongo-rc
    app: mongo
    layer: database
    project: dave
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-node-2
        app: mongo
        layer: database
        project: dave
    spec:
      containers:
      - name: mongo-node-2
        image: mongo
        command:
          - mongod
          - "--replSet"
          - my_replica_set
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage-2
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage-2
        persistentVolumeClaim:
          claimName: mongo-storage-2
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mongo-3
  labels:
    name: mongo-rc
    app: mongo
    layer: database
    project: dave
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-node-3
        app: mongo
        layer: database
        project: dave
    spec:
      containers:
      - name: mongo-node-3
        image: mongo
        command:
          - mongod
          - "--replSet"
          - my_replica_set
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-storage-3
          mountPath: /data/db
      volumes:
      - name: mongo-persistent-storage-3
        persistentVolumeClaim:
          claimName: mongo-storage-3
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-storage-1
  namespace: database
  annotations:
    volume.beta.kubernetes.io/storage-class: "ssd"
  labels:
    name: mongo-storage-1
    project: dave
    layer: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-storage-2
  namespace: database
  annotations:
    volume.beta.kubernetes.io/storage-class: "ssd"
  labels:
    name: mongo-storage-2
    project: dave
    layer: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-storage-3
  namespace: database
  annotations:
    volume.beta.kubernetes.io/storage-class: "ssd"
  labels:
    name: mongo-storage-3
    project: dave
    layer: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
